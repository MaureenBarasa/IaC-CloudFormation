---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Managed Nodes (SSH access: true) [created by eksctl]'

Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com

Parameters:
  EnvironmentName:
    Type: String
    Description: The Environment you are launching services in (Prod/UAT)

  CreatedBy:
    Type: String
    Description: The Identity of the Person Creating the Environment

  ProjectName:
    Type: String
    Description: The Company Project Name

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: "Gaming"

  NodeImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI id for the node instances.
    Default: "ami-03130878b60947df3"

  NodeInstanceType:
    Description: EC2 instance type for the node instances
    Type: String
    Default: t2.medium

  NodeAutoScalingGroupMinSize:
    Type: Number
    Description: Minimum size of Node Group ASG.
    Default: 2

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Description: Maximum size of Node Group ASG.
    Default: 2

  NodeAutoScalingGroupDesiredSize:
    Type: Number
    Description: Desired size of Node Group ASG
    Default: 2
  
  EKSClusterName:
    Description: The name of your EKS Cluster 
    Type: String
    Default: XR3-EKS-Cluster

  NodeGroupName:
    Description: The name of your eks cluster nodegroup 
    Type: String
    Default: XR3-EKS-Cluster-NodeGroup
    
  EBSVolumeSize:
    Type: Number
    Description: The EBS Volume Size for your cluster worker nodes (in GB)
    Default: 20

  EBSVolumeType:
    Type: String
    Description: The EBS Volume Type for your cluster worker nodes (e.g. gp2)
    Default: gp2

  EKSWorkerNodesLaunchTemplate:
    Type: String
    Description: The name of the EKS autoscaling worker nodes group launched template
    Default: XR3-EKS-Worker-Nodes-Template

Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: !Ref EBSVolumeSize
            VolumeType: !Ref EBSVolumeType
        InstanceType: !Ref NodeInstanceType
        KeyName: !Ref KeyName
        MetadataOptions:
          HttpPutResponseHopLimit: 2
          HttpTokens: optional
        SecurityGroupIds:
        - !ImportValue EKSClusterSecurityGroupId
        - Ref: SSH
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: XR3-eks-node-group-01
          - Key: alpha.eksctl.io/nodegroup-name
            Value: eks-node-group-01
          - Key: alpha.eksctl.io/nodegroup-type
            Value: managed
      LaunchTemplateName: !Ref EKSWorkerNodesLaunchTemplate

  ManagedNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName: !Ref EKSClusterName
      Labels:
        alpha.eksctl.io/cluster-name: !Ref EKSClusterName
        alpha.eksctl.io/nodegroup-name: eks-node-group-01
        role: workers
      LaunchTemplate:
        Id:
          Ref: LaunchTemplate
      NodeRole:
        Fn::GetAtt:
        - NodeInstanceRole
        - Arn
      NodegroupName: !Ref NodeGroupName
      ScalingConfig:
        DesiredSize: !Ref NodeAutoScalingGroupDesiredSize
        MaxSize: !Ref NodeAutoScalingGroupMaxSize
        MinSize: !Ref NodeAutoScalingGroupMinSize
      Subnets:
        - !ImportValue XR3-PrivateSubnet01Id
        - !ImportValue XR3-PrivateSubnet02Id
      Tags:
        alpha.eksctl.io/nodegroup-name: eks-node-group-01
        alpha.eksctl.io/nodegroup-type: managed

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::FindInMap:
              - ServicePrincipalPartitionMap
              - Ref: AWS::Partition
              - EC2
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy
      Path: "/"
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}/NodeInstanceRole"

  SSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access
      GroupName:
        Fn::Sub: "${AWS::StackName}-remoteAccess"
      SecurityGroupIngress:
      - CidrIp: 10.255.112.0/32
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}/SSH"
      VpcId: !ImportValue XR3-VPCID
