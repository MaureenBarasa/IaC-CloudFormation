---
AWSTemplateFormatVersion: "2010-09-09"
Description: Template to Create our trace app  environment Network Architecture

Parameters:
  VPCBlock:
    Type: String
    Description: The CIDR Block for the VPC
    Default: 10.255.116.0/22

  PrivateSubnet01Block:
    Type: String
    Description: The CIDR Block for the private subnet 01
    Default: 10.255.116.0/25

  PrivateSubnet02Block:
    Type: String
    Description: The CIDR Block for the private subnet 02
    Default: 10.255.116.128/25

  PrivateSubnet03Block:
    Type: String
    Description: The CIDR Block for the private subnet 03
    Default: 10.255.117.0/25

  PrivateSubnet04Block:
    Type: String
    Description: The CIDR Block for the private subnet 04
    Default: 10.255.117.128/25

  PublicSubnet01Block:
    Type: String
    Description: The CIDR Block for the public subnet 01
    Default: 10.255.118.0/27

  PublicSubnet02Block:
    Type: String
    Description: The CIDR Block for the public subnet 02
    Default: 10.255.118.32/27

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: eu-west-1-test-VPC
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  IGW: 
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: eu-west-1-test-IGW
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  NatGateway01:
    DependsOn:
    - NatGatewayEIP01
    - PublicSubnet01
    - VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'NatGatewayEIP01.AllocationId'
      SubnetId: !Ref PublicSubnet01
      Tags: 
        - Key: Name
          Value: eu-west-1-test-NatGateway01
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test
  
  NatGateway02:
    DependsOn:
    - NatGatewayEIP02
    - PublicSubnet02
    - VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt 'NatGatewayEIP02.AllocationId'
      SubnetId: !Ref PublicSubnet02
      Tags: 
        - Key: Name
          Value: eu-west-1-test-NatGateway02
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test
 

  NatGatewayEIP01:
    DependsOn:
    - VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  NatGatewayEIP02:
    DependsOn:
    - VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PublicRouteTable
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PrivateRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateRouteTable01
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PrivateRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateRouteTable02
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PublicRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  PrivateRoute01:
    DependsOn:
    - VPCGatewayAttachment
    - NatGateway01
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable01
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway01

  PrivateRoute02:
    DependsOn:
    - VPCGatewayAttachment
    - NatGateway02
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway02

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: !Ref PrivateSubnet01Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateSubnet01
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: !Ref PrivateSubnet02Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateSubnet02
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PrivateSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: !Ref PrivateSubnet03Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateSubnet03
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test
 
  PrivateSubnet04:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: !Ref PrivateSubnet04Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PrivateSubnet04
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test
 
  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone: eu-west-1a
      CidrBlock: !Ref PublicSubnet01Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PublicSubnet01
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone: eu-west-1b
      CidrBlock: !Ref PublicSubnet02Block
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: eu-west-1-test-PublicSubnet02
        - Key: createdBy
          Value: Maureen Barasa
        - Key: Project
          Value: test-blog
        - Key: Environment
          Value: test

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateRouteTable01

  PrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateRouteTable01

  PrivateSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet03
      RouteTableId: !Ref PrivateRouteTable02

  PrivateSubnet04RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet04
      RouteTableId: !Ref PrivateRouteTable02

Outputs:
  PublicSubnet01Id:
    Description: Public Subnet 01 ID in the VPC
    Value: !Ref PublicSubnet01
    Export: 
      Name: !Sub "${AWS::StackName}-PublicSubnet01Id"

  PublicSubnet02Id:
    Description: Public Subnet 02 ID in the VPC
    Value: !Ref PublicSubnet02
    Export: 
      Name: !Sub "${AWS::StackName}-PublicSubnet02Id"

  PrivateSubne01tId:
    Description: Private Subnet 01 ID in the VPC
    Value: !Ref PrivateSubnet01
    Export: 
      Name: !Sub "${AWS::StackName}-PrivateSubnetId"

  PrivateSubne02tId:
    Description: Private Subnet 02 ID in the VPC
    Value: !Ref PrivateSubnet02
    Export: 
      Name: !Sub "${AWS::StackName}-PrivateSubnet02Id"

  PrivateSubne03tId:
    Description: Private Subnet 03 ID in the VPC
    Value: !Ref PrivateSubnet03
    Export: 
      Name: !Sub "${AWS::StackName}-PrivateSubnet03Id"

  PrivateSubne04tId:
    Description: Private Subnet IDs in the VPC
    Value: !Ref PrivateSubnet04
    Export: 
      Name: !Sub "${AWS::StackName}-PrivateSubnet04Id"

  VpcId:
    Description: The VPC Id
    Value: !Ref VPC
    Export: 
      Name: !Sub "${AWS::StackName}-VPCID"
